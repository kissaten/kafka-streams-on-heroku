#!/usr/bin/env bash

set -e

setup_dedicated () {
  heroku addons:create heroku-postgresql:hobby-dev --as HEROKU_POSTGRESQL -a ${APP_NAME} && \
    heroku addons:create heroku-kafka:${PLAN} --as HEROKU_KAFKA -a ${APP_NAME} && \
    heroku kafka:wait -a ${APP_NAME} && \
    heroku kafka:topics:create textlines --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create words --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create loglines --partitions 5 -a ${APP_NAME}
    heroku kafka:topics:create aggregator-app-windowed-counts-changelog --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create aggregator-app-windowed-counts-repartition --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create anomaly-detector-app-windowed-counts-changelog --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create anomaly-detector-app-windowed-counts-repartition --partitions 5 -a ${APP_NAME} && \
}

setup_multi_tenant () {
  heroku addons:create heroku-postgresql:hobby-dev --as HEROKU_POSTGRESQL -a ${APP_NAME} && \
    heroku addons:create heroku-kafka:${PLAN} --as HEROKU_KAFKA -a ${APP_NAME} && \
    heroku kafka:wait -a ${APP_NAME} && \
    heroku kafka:topics:create textlines --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create words --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create loglines --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create aggregator-app-windowed-counts-changelog --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create aggregator-app-windowed-counts-repartition --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create anomaly-detector-app-windowed-counts-changelog --partitions 5 -a ${APP_NAME} && \
    heroku kafka:topics:create anomaly-detector-app-windowed-counts-repartition --partitions 5 -a ${APP_NAME} && \
    heroku kafka:consumer-groups:create anomaly-detector-app -a ${APP_NAME} && \
    heroku kafka:consumer-groups:create text-processor-app -a ${APP_NAME} && \
    heroku kafka:consumer-groups:create aggregator-app -a ${APP_NAME}
}

if [[ -z $1 ]]; then
  echo "usage: $0 APP_NAME PLAN" >&2
  exit 1
fi

APP_NAME=$1

if [[ $2 =~ (standard|basic|extended|private-standard|private-extended)-[012] ]]; then
  PLAN=$2
else
  PLAN="basic-0"
fi

if [[ $PLAN =~ basic-[012] ]]; then
  setup_multi_tenant
else
  setup_dedicated
fi

heroku pg:psql -c 'CREATE TABLE windowed_counts(id serial primary key NOT NULL, time_window bigint NOT NULL, word text, count bigint NOT NULL);' HEROKU_POSTGRESQL_URL -a ${APP_NAME}
heroku pg:psql -c 'CREATE UNIQUE INDEX windowed_counts_time_window_word ON windowed_counts(word text_ops,time_window int8_ops);' HEROKU_POSTGRESQL_URL -a ${APP_NAME}

heroku ps:scale text_processor_worker=1 -a ${APP_NAME}
heroku ps:scale aggregator_worker=1 -a ${APP_NAME}
# heroku ps:scale anomaly_detector_worker=1 -a ${APP_NAME}  # Can't run more than 2 free dynos.
